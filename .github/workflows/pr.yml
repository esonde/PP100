name: PR CI

on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "docs/**"

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  validate:
    name: Setup Python & Validate Schemas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies and validate
        run: make validate

  lint-typecheck:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install Python lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit mypy
      - name: Pre-commit
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          if [ -n "$CHANGED_FILES" ]; then
            pre-commit run --config pre-commit-config.yaml --files $CHANGED_FILES
          else
            echo "No files to lint"
          fi
      - name: Mypy
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_PY=$(git diff --name-only origin/${{ github.base_ref }}...HEAD -- '*.py')
          if [ -n "$CHANGED_PY" ]; then
            mypy --ignore-missing-imports $CHANGED_PY
          else
            echo "No Python files to type-check"
          fi
      - name: Install Web dependencies
        run: |
          cd web
          npm ci
      - name: Web lint
        run: |
          cd web
          npm run lint
      - name: Web type-check
        run: |
          cd web
          npm run type-check

  ingest:
    name: Ingest (dry-run)
    runs-on: ubuntu-latest
    needs: [lint-typecheck]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ingest/requirements.txt
      - name: Run ingest
        run: PR_CI=1 python ingest/run_ingest.py

  enrich:
    name: Enrich (dry-run)
    runs-on: ubuntu-latest
    needs: ingest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ingest/requirements.txt
      - name: Run enrich
        run: PR_CI=1 python enrich/run_enrich.py

  scoring:
    name: Scoring (dry-run)
    runs-on: ubuntu-latest
    needs: enrich
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ingest/requirements.txt
      - name: Run scoring
        run: PR_CI=1 python scoring/run_scoring.py

  build-web:
    name: Build Web (no deploy)
    runs-on: ubuntu-latest
    needs: scoring
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        run: |
          cd web
          npm ci
      - name: Build and export
        run: |
          cd web
          npm run build
          npm run export
